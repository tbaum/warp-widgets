<project name="warp-widgets" default="make">
    <description>warp-widgets: a ridiculously simple, statically-typed, restful web framework</description>

    <property file="build.properties"/>

    <path id="warp-widgets.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clean" description="Cleans up the build artifacts and temporary directories">
        <delete dir="${build}"/>
    </target>


    <!-- setup testng -->
    <taskdef name="testng" classname="org.testng.TestNGAntTask">
        <classpath refid="warp-widgets.classpath"/>
    </taskdef>

    <target name="init">
        <mkdir dir="${core-classes}"/>
        <mkdir dir="${test-classes}"/>
        <mkdir dir="${acceptance-test-classes}"/>
        <mkdir dir="${dir.distribute}"/>
    </target>

    <target name="make" depends="init" description="Compiles and tests warp-widgets">
        <javac sourcepath="" srcdir="${src}" destdir="${core-classes}" debug="on">
            <include name="**/*.java"/>
            <exclude name="com/wideplay/warp/example/**"/>

            <classpath refid="warp-widgets.classpath"/>
        </javac>

        <!-- copy non binary resources to output classpath -->
        <copy todir="${core-classes}">
            <fileset dir="${src}">
                <include name="**/*.xml"/>
                <include name="**/*.html"/>
                <include name="**/*.xhtml"/>
                <exclude name="log4j.properties"/>
                <include name="**/*.properties"/>
                <include name="**/*.js"/>

                <exclude name="com/wideplay/warp/example/**"/>
            </fileset>
        </copy>
        <copy todir="${test-classes}">
            <fileset dir="${test}">
                <include name="**/*.xml"/>
                <include name="**/*.html"/>
                <include name="**/*.xhtml"/>
                <exclude name="log4j.properties"/>
                <include name="**/*.properties"/>
                <include name="**/*.js"/>

                <exclude name="com/wideplay/warp/example/**"/>
            </fileset>
        </copy>


        <javac sourcepath="" srcdir="${test}" destdir="${test-classes}" debug="on">
            <include name="**/*.java"/>
            <classpath>
                <path refid="warp-widgets.classpath"/>
                <pathelement location="${core-classes}"/>
            </classpath>
        </javac>


        <!-- run them with testng -->
        <testng haltonfailure="true" verbose="2" suitename="warp-widgets unit tests">
            <classpath>
                <path refid="warp-widgets.classpath"/>

                <pathelement location="${core-classes}"/>
                <pathelement location="${test-classes}"/>
            </classpath>

            <classfileset dir="${test-classes}" includes="**/widgets/**/*Test.class"/>
        </testng>

    </target>

    <target name="jar" depends="clean,make" description="Assembles a distributable jar and zip (for direct use in webapps)">
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="${lib}/jarjar-1.0rc7.jar"/>

        <jarjar jarfile="${build}/jartmp.jar">

            <!--warp-widgets classes-->
            <fileset dir="${core-classes}">
                <!--<exclude name="com/wideplay/warp/widgets/example/**"/>     -->
                <exclude name="META-INF/**"/>
            </fileset>

            <!--dependencies-->
            <zipfileset src="${lib}/asm.jar">
                <exclude name="META-INF/*"/>
            </zipfileset>
            <zipfileset src="${lib}/commons-io.jar">
                <exclude name="META-INF/*"/>
            </zipfileset>
            <zipfileset src="${lib}/dom4j-1.6.1.jar">
                <exclude name="META-INF/*"/>
            </zipfileset>
            <zipfileset src="${lib}/jaxen-1.1-beta-7.jar">
                <exclude name="META-INF/*"/>
            </zipfileset>
            <zipfileset src="${lib}/mvel-2.0-SNAPSHOT.jar">
                <exclude name="META-INF/*"/>
            </zipfileset>

             <!--repackage into warp-widgets namespace-->
            <keep pattern="com.wideplay.warp.**"/>
            <rule pattern="org.objectweb.asm.**" result="com.wideplay.warp.widgets.asm.@1"/>
            <rule pattern="org.mvel.**" result="com.wideplay.warp.widgets.mvel.@1"/>
            <rule pattern="org.dom4j.**" result="com.wideplay.warp.widgets.dom4j.@1"/>
            <rule pattern="org.apache.commons.io.**" result="com.wideplay.warp.widgets.io.@1"/>
            <rule pattern="org.jaxen.**" result="com.wideplay.warp.widgets.jaxen.@1"/>
        </jarjar>

        <!-- horrendous workaround needed coz jarjar does not put in directory entries -->
        <unzip src="${build}/jartmp.jar" dest="${jartmp}"/>

        <!-- rejar with regular jar to generated jar entries -->
        <jar jarfile="${dir.distribute}/warp-widgets-${version}.jar" index="true">
            <fileset dir="${build}/jartmp"/>
        </jar>

      
        <!-- run them with testng -->
        <testng haltonfailure="true" verbose="2" suitename="warp-widgets unit tests on jar">
            <classpath>
                <path refid="warp-widgets.classpath"/>

                <pathelement location="${test-classes}"/>
                <pathelement location="${dir.distribute}/warp-widgets-${version}.jar"/>
            </classpath>

            <classfileset dir="${build}" includes="**/widgets/**/*Test.class"/>
        </testng>

        <jar basedir="${src}" destfile="${dir.distribute}/warp-widgets-src-${version}.jar"/>


        <!-- make a staging dir for distribution -->
        <mkdir dir="${staging}/WEB-INF/lib"/>
        <copy todir="${staging}/WEB-INF/lib">
            <fileset dir="${dir.distribute}" includes="*.jar" excludes="warp-widgets-src-*.jar"/>
            <fileset dir="${lib}">
                <include name="warp-servlet-*.jar"/>
                <include name="guice-*.jar"/>
            </fileset>
        </copy>
        <copy todir="${staging}/WEB-INF">
            <fileset dir="${dir.resources}">
                <include name="web.xml"/>
            </fileset>
        </copy>
        <copy todir="${staging}">
            <fileset dir="${dir.resources}">
                <include name="*.html"/>
            </fileset>
        </copy>

        <zip basedir="${staging}" destfile="${dir.distribute}/warp-widgets-full-${version}.zip"/>
    </target>

    <target name="acceptance" description="Runs acceptance tests using Jetty to verify widget rendering">
        <javac sourcepath="" srcdir="${acceptance-test}" destdir="${acceptance-test-classes}" debug="on">
            <include name="**/*.java"/>
            <classpath>
                <path refid="warp-widgets.classpath"/>
                <!--<pathelement location="${core-classes}"/>-->

                <fileset dir="${dir.distribute}" includes="warp-widgets-${version}.jar"/>
                <fileset dir="${lib}/webdriver">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}/jetty">
                    <include name="*.jar"/>
                </fileset>
                <pathelement location="${test-classes}"/>
            </classpath>
        </javac>

        <!-- run acceptance tests against library jar -->
        <testng haltonfailure="true" verbose="2" suitename="warp-widgets acceptance tests">
            <classpath>
                <fileset dir="${lib}">
                    <include name="guice-1.0.jar"/>
                    <include name="warp-servlet*.jar"/>
                </fileset>
                <fileset dir="${lib}/webdriver">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}/jetty">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${dir.distribute}" includes="warp-widgets-${version}.jar"/>
                <pathelement location="${acceptance-test-classes}"/>
            </classpath>

            <classfileset dir="${acceptance-test-classes}" includes="**/*AcceptanceTest.class"/>
        </testng>
    </target>

</project>